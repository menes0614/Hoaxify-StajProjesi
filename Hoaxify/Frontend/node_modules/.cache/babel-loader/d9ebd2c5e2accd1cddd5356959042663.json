{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enes\\\\frontend\\\\src\\\\components\\\\ProfileCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { useTranslation } from 'react-i18next';\nimport Input from './Input';\nimport { updateUser, deleteUser } from '../api/apiCalls';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport ButtonWithProgress from './ButtonWithProgress';\nimport { updateSuccess, logoutSuccess } from '../redux/authActions';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileCard = props => {\n  _s();\n\n  const [inEditMode, setInEditMode] = useState(false);\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\n  const {\n    username: loggedInUsername\n  } = useSelector(store => ({\n    username: store.username\n  }));\n  const routeParams = useParams();\n  const pathUsername = routeParams.username;\n  const [user, setUser] = useState({});\n  const [editable, setEditable] = useState(false);\n  const [newImage, setNewImage] = useState();\n  const [validationErrors, setValidationErrors] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n  useEffect(() => {\n    setEditable(pathUsername === loggedInUsername);\n  }, [pathUsername, loggedInUsername]);\n  useEffect(() => {\n    setValidationErrors(previousValidationErrors => ({ ...previousValidationErrors,\n      displayName: undefined\n    }));\n  }, [updatedDisplayName]);\n  useEffect(() => {\n    setValidationErrors(previousValidationErrors => ({ ...previousValidationErrors,\n      image: undefined\n    }));\n  }, [newImage]);\n  const {\n    username,\n    displayName,\n    image\n  } = user;\n  const pendingApiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${username}`, true);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (!inEditMode) {\n      setUpdatedDisplayName(undefined);\n      setNewImage(undefined);\n    } else {\n      setUpdatedDisplayName(displayName);\n    }\n  }, [inEditMode, displayName]);\n\n  const onClickSave = async () => {\n    let image;\n\n    if (newImage) {\n      image = newImage.split(',')[1];\n    }\n\n    const body = {\n      displayName: updatedDisplayName,\n      image\n    };\n\n    try {\n      const response = await updateUser(username, body);\n      setInEditMode(false);\n      setUser(response.data);\n      dispatch(updateSuccess(response.data));\n    } catch (error) {\n      setValidationErrors(error.response.data.validationErrors);\n    }\n  };\n\n  const onChangeFile = event => {\n    if (event.target.files.length < 1) {\n      return;\n    }\n\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      setNewImage(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const onClickCancel = () => {\n    setModalVisible(false);\n  };\n\n  const onClickDeleteUser = async () => {\n    await deleteUser(username);\n    setModalVisible(false);\n    dispatch(logoutSuccess());\n    history.push('/');\n  };\n\n  const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username);\n  const {\n    displayName: displayNameError,\n    image: imageError\n  } = validationErrors;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(ProfileImageWithDefault, {\n        className: \"rounded-circle shadow\",\n        width: \"200\",\n        height: \"200\",\n        alt: `${username} profile`,\n        image: image,\n        tempimage: newImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [!inEditMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [displayName, \"@\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), editable && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success d-inline-flex\",\n            onClick: () => setInEditMode(true),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), t('Edit')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger d-inline-flex\",\n              onClick: () => setModalVisible(true),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                children: \"directions_run\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), t('Delete My Account')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), inEditMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: t('Change Display Name'),\n          defaultValue: displayName,\n          onChange: event => {\n            setUpdatedDisplayName(event.target.value);\n          },\n          error: displayNameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          onChange: onChangeFile,\n          error: imageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ButtonWithProgress, {\n            className: \"btn btn-primary d-inline-flex\",\n            onClick: onClickSave,\n            disabled: pendingApiCall,\n            pendingApiCall: pendingApiCall,\n            text: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                children: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), t('Save')]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light d-inline-flex ml-1\",\n            onClick: () => setInEditMode(false),\n            disabled: pendingApiCall,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), t('Cancel')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: modalVisible,\n      title: t('Delete My Account'),\n      okButton: t('Delete My Account'),\n      onClickCancel: onClickCancel,\n      onClickOk: onClickDeleteUser,\n      message: t('Are you sure to delete your account?'),\n      pendingApiCall: pendingApiCallDeleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileCard, \"7yJjwSoPAIUBDhC5hp9OWV6CF1o=\", false, function () {\n  return [useSelector, useParams, useDispatch, useHistory, useApiProgress, useTranslation, useApiProgress];\n});\n\n_c = ProfileCard;\nexport default ProfileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"sources":["C:/Users/Enes/frontend/src/components/ProfileCard.js"],"names":["React","useState","useEffect","useParams","useHistory","useSelector","useDispatch","ProfileImageWithDefault","useTranslation","Input","updateUser","deleteUser","useApiProgress","ButtonWithProgress","updateSuccess","logoutSuccess","Modal","ProfileCard","props","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","username","loggedInUsername","store","routeParams","pathUsername","user","setUser","editable","setEditable","newImage","setNewImage","validationErrors","setValidationErrors","modalVisible","setModalVisible","dispatch","history","previousValidationErrors","displayName","undefined","image","pendingApiCallDeleteUser","t","onClickSave","split","body","response","data","error","onChangeFile","event","target","files","length","file","fileReader","FileReader","onloadend","result","readAsDataURL","onClickCancel","onClickDeleteUser","push","pendingApiCall","displayNameError","imageError","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport { updateUser, deleteUser } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { updateSuccess, logoutSuccess } from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = props => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const { username: loggedInUsername } = useSelector(store => ({ username: store.username }));\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername);\r\n  }, [pathUsername, loggedInUsername]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      displayName: undefined\r\n    }));\r\n  }, [updatedDisplayName]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      image: undefined\r\n    }));\r\n  }, [newImage]);\r\n\r\n  const { username, displayName, image } = user;\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${username}`, true);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n  const onClickSave = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(',')[1];\r\n    }\r\n\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data);\r\n      dispatch(updateSuccess(response.data));\r\n    } catch (error) {\r\n      setValidationErrors(error.response.data.validationErrors);\r\n    }\r\n  };\r\n\r\n  const onChangeFile = event => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(username);\r\n    setModalVisible(false);\r\n    dispatch(logoutSuccess());\r\n    history.push('/');\r\n  };\r\n  const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username);\r\n\r\n  const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && (\r\n          <>\r\n            <h3>\r\n              {displayName}@{username}\r\n            </h3>\r\n            {editable && (\r\n              <>\r\n                <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true)}>\r\n                  <i className=\"material-icons\">edit</i>\r\n                  {t('Edit')}\r\n                </button>\r\n                <div className=\"pt-2\">\r\n                  <button className=\"btn btn-danger d-inline-flex\" onClick={() => setModalVisible(true)}>\r\n                    <i className=\"material-icons\">directions_run</i>\r\n                    {t('Delete My Account')}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={event => {\r\n                setUpdatedDisplayName(event.target.value);\r\n              }}\r\n              error={displayNameError}\r\n            />\r\n            <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickSave}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n              <button className=\"btn btn-light d-inline-flex ml-1\" onClick={() => setInEditMode(false)} disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t('Delete My Account')}\r\n        okButton={t('Delete My Account')}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        message={t('Are you sure to delete your account?')}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n"]},"metadata":{},"sourceType":"module"}