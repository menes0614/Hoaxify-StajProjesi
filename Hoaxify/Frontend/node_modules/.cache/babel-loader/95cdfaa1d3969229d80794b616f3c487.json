{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enes\\\\frontend\\\\src\\\\components\\\\HoaxSubmit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { useTranslation } from 'react-i18next';\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport ButtonWithProgress from './ButtonWithProgress';\nimport Input from './Input';\nimport AutoUploadImage from './AutoUploadImage';\n\nconst HoaxSubmit = () => {\n  const {\n    image\n  } = useSelector(store => ({\n    image: store.image\n  }));\n  const [focused, setFocused] = useState(false);\n  const [hoax, setHoax] = useState('');\n  const [errors, setErrors] = useState({});\n  const [newImage, setNewImage] = useState();\n  const [attachmentId, setAttachmentId] = useState();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (!focused) {\n      setHoax('');\n      setErrors({});\n      setNewImage();\n      setAttachmentId();\n    }\n  }, [focused]);\n  useEffect(() => {\n    setErrors({});\n  }, [hoax]);\n  const pendingApiCall = useApiProgress('post', '/api/1.0/hoaxes', true);\n  const pendingFileUpload = useApiProgress('post', '/api/1.0/hoax-attachments', true);\n\n  const onClickHoaxify = async () => {\n    const body = {\n      content: hoax,\n      attachmentId: attachmentId\n    };\n\n    try {\n      await postHoax(body);\n      setFocused(false);\n    } catch (error) {\n      if (error.response.data.validationErrors) {\n        setErrors(error.response.data.validationErrors);\n      }\n    }\n  };\n\n  const onChangeFile = event => {\n    if (event.target.files.length < 1) {\n      return;\n    }\n\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      setNewImage(fileReader.result);\n      uploadFile(file);\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const uploadFile = async file => {\n    const attachment = new FormData();\n    attachment.append('file', file);\n    const response = await postHoaxAttachment(attachment);\n    setAttachmentId(response.data.id);\n  };\n\n  let textAreaClass = 'form-control';\n\n  if (errors.content) {\n    textAreaClass += ' is-invalid';\n  }\n\n  return React.createElement(\"div\", {\n    className: \"card p-1 flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ProfileImageWithDefault, {\n    image: image,\n    width: \"32\",\n    height: \"32\",\n    className: \"rounded-circle mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex-fill\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: textAreaClass,\n    rows: focused ? '3' : '1',\n    onFocus: () => setFocused(true),\n    onChange: event => setHoax(event.target.value),\n    value: hoax,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, errors.content), focused && React.createElement(React.Fragment, null, !newImage && React.createElement(Input, {\n    type: \"file\",\n    onChange: onChangeFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), newImage && React.createElement(AutoUploadImage, {\n    image: newImage,\n    uploading: pendingFileUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-right mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ButtonWithProgress, {\n    className: \"btn btn-primary\",\n    onClick: onClickHoaxify,\n    text: \"Hoaxify\",\n    pendingApiCall: pendingApiCall,\n    disabled: pendingApiCall || pendingFileUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-light d-inline-flex ml-1\",\n    onClick: () => setFocused(false),\n    disabled: pendingApiCall || pendingFileUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"close\"), t('Cancel'))))));\n};\n\nexport default HoaxSubmit;","map":{"version":3,"sources":["C:/Users/Enes/frontend/src/components/HoaxSubmit.js"],"names":["React","useState","useEffect","useSelector","ProfileImageWithDefault","useTranslation","postHoax","postHoaxAttachment","useApiProgress","ButtonWithProgress","Input","AutoUploadImage","HoaxSubmit","image","store","focused","setFocused","hoax","setHoax","errors","setErrors","newImage","setNewImage","attachmentId","setAttachmentId","t","pendingApiCall","pendingFileUpload","onClickHoaxify","body","content","error","response","data","validationErrors","onChangeFile","event","target","files","length","file","fileReader","FileReader","onloadend","result","uploadFile","readAsDataURL","attachment","FormData","append","id","textAreaClass","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport Input from './Input';\r\nimport AutoUploadImage from './AutoUploadImage';\r\n\r\nconst HoaxSubmit = () => {\r\n  const { image } = useSelector(store => ({ image: store.image }));\r\n  const [focused, setFocused] = useState(false);\r\n  const [hoax, setHoax] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [newImage, setNewImage] = useState();\r\n  const [attachmentId, setAttachmentId] = useState();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!focused) {\r\n      setHoax('');\r\n      setErrors({});\r\n      setNewImage();\r\n      setAttachmentId();\r\n    }\r\n  }, [focused]);\r\n\r\n  useEffect(() => {\r\n    setErrors({});\r\n  }, [hoax]);\r\n\r\n  const pendingApiCall = useApiProgress('post', '/api/1.0/hoaxes', true);\r\n  const pendingFileUpload = useApiProgress('post', '/api/1.0/hoax-attachments', true);\r\n\r\n  const onClickHoaxify = async () => {\r\n    const body = {\r\n      content: hoax,\r\n      attachmentId: attachmentId\r\n    };\r\n\r\n    try {\r\n      await postHoax(body);\r\n      setFocused(false);\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeFile = event => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n      uploadFile(file);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const attachment = new FormData();\r\n    attachment.append('file', file);\r\n    const response = await postHoaxAttachment(attachment);\r\n    setAttachmentId(response.data.id);\r\n  };\r\n\r\n  let textAreaClass = 'form-control';\r\n  if (errors.content) {\r\n    textAreaClass += ' is-invalid';\r\n  }\r\n\r\n  return (\r\n    <div className=\"card p-1 flex-row\">\r\n      <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle mr-1\" />\r\n      <div className=\"flex-fill\">\r\n        <textarea\r\n          className={textAreaClass}\r\n          rows={focused ? '3' : '1'}\r\n          onFocus={() => setFocused(true)}\r\n          onChange={event => setHoax(event.target.value)}\r\n          value={hoax}\r\n        />\r\n        <div className=\"invalid-feedback\">{errors.content}</div>\r\n        {focused && (\r\n          <>\r\n            {!newImage && <Input type=\"file\" onChange={onChangeFile} />}\r\n            {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload} />}\r\n            <div className=\"text-right mt-1\">\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary\"\r\n                onClick={onClickHoaxify}\r\n                text=\"Hoaxify\"\r\n                pendingApiCall={pendingApiCall}\r\n                disabled={pendingApiCall || pendingFileUpload}\r\n              />\r\n              <button className=\"btn btn-light d-inline-flex ml-1\" onClick={() => setFocused(false)} disabled={pendingApiCall || pendingFileUpload}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoaxSubmit;\r\n"]},"metadata":{},"sourceType":"module"}