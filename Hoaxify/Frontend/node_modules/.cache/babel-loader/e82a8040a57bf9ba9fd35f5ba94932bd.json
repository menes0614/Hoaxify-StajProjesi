{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './authReducer';\nimport SecureLS from 'secure-ls';\nimport { setAuthorizationHeader } from '../api/apiCalls';\nconst secureLs = new SecureLS();\n\nconst getStateFromStorage = () => {\n  const hoaxAuth = secureLs.get('hoax-auth');\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined\n  };\n\n  if (hoaxAuth) {\n    return hoaxAuth;\n  }\n\n  return stateInLocalStorage;\n};\n\nconst updateStateInStorage = newState => {\n  secureLs.set('hoax-auth', newState);\n};\n\nconst configureStore = () => {\n  const initialState = getStateFromStorage();\n  setAuthorizationHeader(initialState);\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\n  store.subscribe(() => {\n    updateStateInStorage(store.getState());\n    setAuthorizationHeader(store.getState());\n  });\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/Enes/frontend/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","compose","thunk","authReducer","SecureLS","setAuthorizationHeader","secureLs","getStateFromStorage","hoaxAuth","get","stateInLocalStorage","isLoggedIn","username","undefined","displayName","image","password","updateStateInStorage","newState","set","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AAEA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,EAAjB;;AAEA,MAAMG,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,WAAb,CAAjB;AAEA,MAAIC,mBAAmB,GAAG;AACxBC,IAAAA,UAAU,EAAE,KADY;AAExBC,IAAAA,QAAQ,EAAEC,SAFc;AAGxBC,IAAAA,WAAW,EAAED,SAHW;AAIxBE,IAAAA,KAAK,EAAEF,SAJiB;AAKxBG,IAAAA,QAAQ,EAAEH;AALc,GAA1B;;AAQA,MAAIL,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD;;AACD,SAAOE,mBAAP;AACD,CAfD;;AAiBA,MAAMO,oBAAoB,GAAGC,QAAQ,IAAI;AACvCZ,EAAAA,QAAQ,CAACa,GAAT,CAAa,WAAb,EAA0BD,QAA1B;AACD,CAFD;;AAIA,MAAME,cAAc,GAAG,MAAM;AAC3B,QAAMC,YAAY,GAAGd,mBAAmB,EAAxC;AACAF,EAAAA,sBAAsB,CAACgB,YAAD,CAAtB;AACA,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CvB,OAAxE;AACA,QAAMwB,KAAK,GAAG1B,WAAW,CAACI,WAAD,EAAckB,YAAd,EAA4BC,gBAAgB,CAACtB,eAAe,CAACE,KAAD,CAAhB,CAA5C,CAAzB;AAEAuB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBT,IAAAA,oBAAoB,CAACQ,KAAK,CAACE,QAAN,EAAD,CAApB;AACAtB,IAAAA,sBAAsB,CAACoB,KAAK,CAACE,QAAN,EAAD,CAAtB;AACD,GAHD;AAKA,SAAOF,KAAP;AACD,CAZD;;AAcA,eAAeL,cAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLs.get('hoax-auth');\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n  };\r\n\r\n  if (hoaxAuth) {\r\n    return hoaxAuth;\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n  secureLs.set('hoax-auth', newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const initialState = getStateFromStorage();\r\n  setAuthorizationHeader(initialState);\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}