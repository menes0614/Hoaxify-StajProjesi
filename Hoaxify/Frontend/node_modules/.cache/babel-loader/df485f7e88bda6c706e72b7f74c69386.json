{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enes\\\\frontend\\\\src\\\\pages\\\\UserSignupPage.js\";\nimport React, { useState } from 'react';\nimport Input from '../components/Input';\nimport { useTranslation } from 'react-i18next';\nimport ButtonWithProgress from '../components/ButtonWithProgress';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport { useDispatch } from 'react-redux';\nimport { signupHandler } from '../redux/authActions';\n\nconst UserSignupPage = props => {\n  const [form, setForm] = useState({\n    username: null,\n    displayName: null,\n    password: null,\n    passwordRepeat: null\n  });\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setErrors(previousErrors => ({ ...previousErrors,\n      [name]: undefined\n    }));\n    setForm(previousForm => ({ ...previousForm,\n      [name]: value\n    }));\n  };\n\n  const onClickSignup = async event => {\n    event.preventDefault();\n    const {\n      history\n    } = props;\n    const {\n      push\n    } = history;\n    const {\n      username,\n      displayName,\n      password\n    } = form;\n    const body = {\n      username,\n      displayName,\n      password\n    };\n\n    try {\n      await dispatch(signupHandler(body));\n      push('/');\n    } catch (error) {\n      if (error.response.data.validationErrors) {\n        setErrors(error.response.data.validationErrors);\n      }\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    username: usernameError,\n    displayName: displayNameError,\n    password: passwordError\n  } = errors;\n  const pendingApiCallSignup = useApiProgress('post', '/api/1.0/users');\n  const pendingApiCallLogin = useApiProgress('post', '/api/1.0/auth');\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\n  let passwordRepeatError;\n\n  if (form.password !== form.passwordRepeat) {\n    passwordRepeatError = t('Password mismatch');\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, t('Sign Up')), React.createElement(Input, {\n    name: \"username\",\n    label: t('Username'),\n    error: usernameError,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"displayName\",\n    label: t('Display Name'),\n    error: displayNameError,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"password\",\n    label: t('Password'),\n    error: passwordError,\n    onChange: onChange,\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"passwordRepeat\",\n    label: t('Password Repeat'),\n    error: passwordRepeatError,\n    onChange: onChange,\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ButtonWithProgress, {\n    onClick: onClickSignup,\n    disabled: pendingApiCall || passwordRepeatError !== undefined,\n    pendingApiCall: pendingApiCall,\n    text: t('Sign Up'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n};\n\nexport default UserSignupPage;","map":{"version":3,"sources":["C:/Users/Enes/frontend/src/pages/UserSignupPage.js"],"names":["React","useState","Input","useTranslation","ButtonWithProgress","useApiProgress","useDispatch","signupHandler","UserSignupPage","props","form","setForm","username","displayName","password","passwordRepeat","errors","setErrors","dispatch","onChange","event","name","value","target","previousErrors","undefined","previousForm","onClickSignup","preventDefault","history","push","body","error","response","data","validationErrors","t","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","pendingApiCall","passwordRepeatError"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupHandler } from '../redux/authActions';\r\n\r\nconst UserSignupPage = (props) => {\r\n  const [form, setForm] = useState({\r\n    username: null,\r\n    displayName: null,\r\n    password: null,\r\n    passwordRepeat: null,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined }));\r\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n\r\n  const onClickSignup = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n\r\n    const { username, displayName, password } = form;\r\n\r\n    const body = {\r\n      username,\r\n      displayName,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      await dispatch(signupHandler(body));\r\n      push('/');\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const { username: usernameError, displayName: displayNameError, password: passwordError } = errors;\r\n  const pendingApiCallSignup = useApiProgress('post', '/api/1.0/users');\r\n  const pendingApiCallLogin = useApiProgress('post', '/api/1.0/auth');\r\n\r\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = t('Password mismatch');\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form>\r\n        <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n        <Input name=\"username\" label={t('Username')} error={usernameError} onChange={onChange} />\r\n        <Input name=\"displayName\" label={t('Display Name')} error={displayNameError} onChange={onChange} />\r\n        <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\" />\r\n        <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n        <div className=\"text-center\">\r\n          <ButtonWithProgress\r\n            onClick={onClickSignup}\r\n            disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n            pendingApiCall={pendingApiCall}\r\n            text={t('Sign Up')}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignupPage;\r\n"]},"metadata":{},"sourceType":"module"}